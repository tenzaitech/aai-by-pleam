# Security Rules

## 🔐 Authentication & Authorization
- **Never hardcode credentials** or secrets in code
- **Use environment variables** for all sensitive data
- **Implement proper authentication** mechanisms
- **Use role-based access control** (RBAC)
- **Validate user permissions** for all operations
- **Implement session management** securely

## 🔒 Data Protection
- **Encrypt sensitive data** at rest and in transit
- **Use HTTPS** for all external communications
- **Implement proper data validation** and sanitization
- **Handle personal data** according to privacy regulations
- **Use secure data storage** practices
- **Implement data retention** policies

## 🛡️ Input Validation
- **Validate all user inputs** thoroughly
- **Sanitize data** to prevent injection attacks
- **Use parameterized queries** for database operations
- **Implement input length limits** and constraints
- **Validate file uploads** and content types
- **Check for malicious patterns** in inputs

## 🌐 Network Security
- **Use HTTPS** for all web communications
- **Implement proper CORS** policies
- **Use secure headers** (HSTS, CSP, etc.)
- **Implement rate limiting** to prevent abuse
- **Use secure DNS** configurations
- **Monitor network traffic** for anomalies

## 🔧 API Security
- **Use API authentication** (JWT, OAuth, etc.)
- **Implement API rate limiting**
- **Validate API requests** and responses
- **Use secure API endpoints** and methods
- **Implement API versioning** securely
- **Monitor API usage** and access patterns

## 🗄️ Database Security
- **Use connection pooling** with proper limits
- **Implement database access controls**
- **Use parameterized queries** to prevent SQL injection
- **Encrypt database connections** (SSL/TLS)
- **Implement database backup** security
- **Monitor database access** and queries

## 📝 Logging & Monitoring
- **Log security events** appropriately
- **Avoid logging sensitive data** (passwords, tokens)
- **Implement log rotation** and retention
- **Monitor for security anomalies**
- **Use secure logging** practices
- **Implement alerting** for security issues

## 🔍 Code Security
- **Use secure coding practices** and patterns
- **Avoid common vulnerabilities** (OWASP Top 10)
- **Implement proper error handling** without information leakage
- **Use secure random number** generation
- **Validate all external data** sources
- **Implement secure defaults** for configurations

## 🚨 Incident Response
- **Have incident response** procedures in place
- **Implement security monitoring** and alerting
- **Document security incidents** and responses
- **Have backup and recovery** procedures
- **Implement security testing** regularly
- **Maintain security documentation**

## 🔐 Secrets Management
- **Use secure secret storage** (HashiCorp Vault, AWS Secrets Manager)
- **Rotate secrets regularly**
- **Implement secret access controls**
- **Monitor secret usage** and access
- **Use secure secret transmission**
- **Implement secret backup** procedures

## 🌍 Environment Security
- **Secure development environments**
- **Use secure CI/CD** pipelines
- **Implement environment isolation**
- **Use secure container** practices
- **Implement infrastructure** security
- **Monitor environment** security

## 📊 Compliance
- **Follow security standards** and frameworks
- **Implement privacy controls** (GDPR, etc.)
- **Document security policies** and procedures
- **Conduct security audits** regularly
- **Implement security training** for team
- **Maintain compliance** documentation

## 🔧 Configuration Security
- **Use secure default configurations**
- **Implement configuration validation**
- **Use environment-specific** security settings
- **Implement configuration** change controls
- **Monitor configuration** changes
- **Document security** configurations

## 🛡️ Threat Prevention
- **Implement defense in depth** strategies
- **Use security monitoring** and detection
- **Implement intrusion detection** systems
- **Use security scanning** tools
- **Implement vulnerability** management
- **Conduct security assessments** regularly

## 🔄 Security Maintenance
- **Keep dependencies updated** and patched
- **Monitor security advisories** and updates
- **Implement security testing** in CI/CD
- **Conduct regular security** reviews
- **Update security policies** and procedures
- **Train team on security** best practices

## 📈 Security Metrics
- **Track security metrics** and KPIs
- **Monitor security incident** trends
- **Measure security program** effectiveness
- **Track vulnerability** remediation times
- **Monitor security awareness** and training
- **Report security status** regularly

## 🚀 Deployment Security
- **Use secure deployment** practices
- **Implement deployment** security checks
- **Use secure infrastructure** as code
- **Implement deployment** monitoring
- **Use secure artifact** management
- **Implement deployment** rollback procedures

## 🔍 Security Testing
- **Implement automated security** testing
- **Conduct penetration testing** regularly
- **Use security scanning** tools
- **Implement vulnerability** assessment
- **Conduct security code** reviews
- **Test security controls** regularly

---

**Remember:** Security is everyone's responsibility. Always prioritize security in all development activities and maintain a security-first mindset.
description:
globs:
alwaysApply: false
---
