import os
import re
import requests

# ‡πÇ‡∏´‡∏•‡∏î environment variables ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
try:
    from dotenv import load_dotenv
    load_dotenv()
    print("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå .env ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
except ImportError:
    print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö python-dotenv ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô: pip install python-dotenv")
except Exception as e:
    print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå .env: {e}")

try:
    from supabase import create_client, Client
except ImportError:
    create_client = None
    Client = None

print("\n==============================")
print("üîç ENVIRONMENT VARIABLES TEST")
print("==============================\n")

# 1. ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å environment
supabase_url = os.getenv('SUPABASE_URL')
supabase_key = os.getenv('SUPABASE_KEY')
supabase_service_role = os.getenv('SUPABASE_SERVICE_ROLE')
supabase_db_password = os.getenv('SUPABASE_DB_PASSWORD')
google_client_id = os.getenv('GOOGLE_CLIENT_ID')
google_client_secret = os.getenv('GOOGLE_CLIENT_SECRET')
google_api_key = os.getenv('GOOGLE_API_KEY')
odoo_username = os.getenv('ODOO_USERNAME')
odoo_db = os.getenv('ODOO_DB')
odoo_url = os.getenv('ODOO_URL')
odoo_api_key = os.getenv('ODOO_API_KEY')

# 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
results = []
def check(key, value, pattern=None, required=True):
    if not value:
        results.append((key, False, '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô environment'))
        return False
    if pattern and not re.match(pattern, value):
        results.append((key, False, '‚ö†Ô∏è ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'))
        return False
    results.append((key, True, '‚úÖ'))
    return True

# SUPABASE
check('SUPABASE_URL', supabase_url, r'^https://[a-z0-9]+\.supabase\.co$')
check('SUPABASE_KEY', supabase_key, r'^[A-Za-z0-9\._-]+$')
check('SUPABASE_SERVICE_ROLE', supabase_service_role, r'^[A-Za-z0-9\._-]+$')
check('SUPABASE_DB_PASSWORD', supabase_db_password, r'^[A-Za-z0-9]+$')

# GOOGLE
check('GOOGLE_CLIENT_ID', google_client_id, r'^[0-9]+-[a-z0-9]+\.apps\.googleusercontent\.com$')
check('GOOGLE_CLIENT_SECRET', google_client_secret, r'^[A-Za-z0-9-_]+$')
check('GOOGLE_API_KEY', google_api_key, r'^AIza[0-9A-Za-z_-]{35,}$')

# ODOO
check('ODOO_USERNAME', odoo_username, r'^.+@.+\..+$')
check('ODOO_DB', odoo_db, r'^[A-Za-z0-9_]+$')
check('ODOO_URL', odoo_url, r'^https://.+$')
check('ODOO_API_KEY', odoo_api_key, r'^[A-Za-z0-9]+$')

# 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ SUPABASE
supabase_connect = False
if supabase_url and supabase_key and create_client:
    try:
        supabase: Client = create_client(supabase_url, supabase_key)
        data = supabase.table('test').select('*').limit(1).execute()
        supabase_connect = True
        results.append(('SUPABASE_CONNECTION', True, '‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Supabase ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'))
    except Exception as e:
        results.append(('SUPABASE_CONNECTION', False, f'‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Supabase ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}'))
else:
    results.append(('SUPABASE_CONNECTION', False, '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Supabase'))

# 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Google API Key (format only)
if google_api_key:
    try:
        resp = requests.get(f'https://maps.googleapis.com/maps/api/geocode/json?address=Bangkok&key={google_api_key}', timeout=5)
        if resp.status_code == 200:
            results.append(('GOOGLE_API_KEY_TEST', True, '‚úÖ Google API Key ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ (HTTP 200)'))
        else:
            results.append(('GOOGLE_API_KEY_TEST', False, f'‚ö†Ô∏è Google API Key ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (HTTP {resp.status_code})'))
    except Exception as e:
        results.append(('GOOGLE_API_KEY_TEST', False, f'‚ùå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Google API Key ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}'))
else:
    results.append(('GOOGLE_API_KEY_TEST', False, '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Google API Key'))

# 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Odoo API Key (format only)
if odoo_url and odoo_api_key:
    results.append(('ODOO_API_KEY_TEST', True, '‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Odoo API Key ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (format only)'))
else:
    results.append(('ODOO_API_KEY_TEST', False, '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Odoo API Key'))

# 6. ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
print("\nüìã ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ENVIRONMENT VARIABLES\n------------------------------")
for key, ok, msg in results:
    print(f"{key:28} : {msg}")

print("\n‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ENVIRONMENT VARIABLES\n") 