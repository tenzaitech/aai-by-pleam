"""
One-Click Launcher - ‡∏£‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
"""

import os
import sys
import subprocess
import asyncio
from pathlib import Path

class OneClickLauncher:
    def __init__(self):
        self.system_name = "AI-Powered Chrome Automation System"
        self.version = "1.0.0"
        self.creator = "WAWA"
        
    async def launch(self):
        """‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö"""
        print("üéØ One-Click Launcher")
        print(f"üöÄ {self.system_name} v{self.version}")
        print(f"üß† ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ {self.creator}")
        print("üëë ‡∏û‡∏£‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô: ‡∏Ñ‡∏∏‡∏ì")
        print("=" * 50)
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö dependencies
        if not self.check_dependencies():
            print("üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies...")
            if not self.install_dependencies():
                return 1
        
        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
        self.setup_environment()
        
        # ‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å
        return await self.run_main_system()
    
    def check_dependencies(self):
        """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö dependencies"""
        try:
            import selenium
            import openai
            import pythainlp
            return True
        except ImportError:
            return False
    
    def install_dependencies(self):
        """‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies"""
        try:
            subprocess.run([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"], check=True)
            return True
        except subprocess.CalledProcessError:
            return False
    
    def setup_environment(self):
        """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°"""
        print("üîß ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°...")
        os.environ.setdefault("PYTHONPATH", str(Path(__file__).parent))
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
        for dir_name in ['logs', 'screenshots', 'data', 'temp']:
            Path(dir_name).mkdir(exist_ok=True)
    
    async def run_main_system(self):
        """‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å"""
        try:
            print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö...")
            
            # Import ‡∏£‡∏∞‡∏ö‡∏ö
            from master_controller import FullSystemLauncher
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á instance
            master = FullSystemLauncher()
            
            # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
            return await master.launch_full_system()
            
            # ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÉ‡∏ô launch_full_system()
            pass
            
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
            return 1
        
        return 0

async def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    launcher = OneClickLauncher()
    return await launcher.launch()

if __name__ == "__main__":
    exit_code = asyncio.run(main())
    sys.exit(exit_code)
