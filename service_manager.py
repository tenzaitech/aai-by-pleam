#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
WAWAGOT.AI - Service Manager
‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Windows Service ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤
"""

import os
import sys
import subprocess
import time
from pathlib import Path

def run_command(command):
    """Run command and return result"""
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def check_admin():
    """Check if running as administrator"""
    try:
        return subprocess.run("net session", shell=True, capture_output=True).returncode == 0
    except:
        return False

def install_service():
    """Install WAWAGOT.AI service"""
    print("üîß ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á WAWAGOT.AI Service...")
    
    # Install required packages
    print("üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á packages ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô...")
    success, stdout, stderr = run_command("pip install pywin32 psutil")
    if not success:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á packages ‡πÑ‡∏î‡πâ: {stderr}")
        return False
    
    # Create logs directory
    logs_dir = Path("logs")
    logs_dir.mkdir(exist_ok=True)
    
    # Install service
    success, stdout, stderr = run_command("python wawagot_windows_service.py install")
    if success:
        print("‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Service ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        return True
    else:
        print(f"‚ùå ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Service ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {stderr}")
        return False

def start_service():
    """Start WAWAGOT.AI service"""
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Service...")
    success, stdout, stderr = run_command("python wawagot_windows_service.py start")
    if success:
        print("‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Service ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        return True
    else:
        print(f"‚ùå ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Service ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {stderr}")
        return False

def stop_service():
    """Stop WAWAGOT.AI service"""
    print("üõë ‡∏´‡∏¢‡∏∏‡∏î Service...")
    success, stdout, stderr = run_command("python wawagot_windows_service.py stop")
    if success:
        print("‚úÖ ‡∏´‡∏¢‡∏∏‡∏î Service ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        return True
    else:
        print(f"‚ùå ‡∏´‡∏¢‡∏∏‡∏î Service ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {stderr}")
        return False

def restart_service():
    """Restart WAWAGOT.AI service"""
    print("üîÑ ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Service...")
    success, stdout, stderr = run_command("python wawagot_windows_service.py restart")
    if success:
        print("‚úÖ ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Service ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        return True
    else:
        print(f"‚ùå ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Service ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {stderr}")
        return False

def check_status():
    """Check service status"""
    print("üìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Service...")
    success, stdout, stderr = run_command("python wawagot_windows_service.py status")
    if success:
        print("‚úÖ Service ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
        print(stdout)
    else:
        print("‚ùå Service ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
        print(stderr)
    
    print("\nüìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ô Services.msc:")
    print("   - ‡∏Å‡∏î Win+R ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå services.msc")
    print("   - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ 'WAWAGOT.AI System Service'")

def remove_service():
    """Remove WAWAGOT.AI service"""
    print("‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö Service ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")
    confirm = input("‡∏û‡∏¥‡∏°‡∏û‡πå 'yes' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô: ")
    if confirm.lower() == 'yes':
        success, stdout, stderr = run_command("python wawagot_windows_service.py remove")
        if success:
            print("‚úÖ ‡∏•‡∏ö Service ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        else:
            print(f"‚ùå ‡∏•‡∏ö Service ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {stderr}")
    else:
        print("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏ö")

def view_log():
    """View service log"""
    log_file = Path("logs/wawagot_service.log")
    if log_file.exists():
        print("üìù ‡πÄ‡∏õ‡∏¥‡∏î Log File...")
        try:
            with open(log_file, 'r', encoding='utf-8') as f:
                content = f.read()
                print(content[-2000:])  # Show last 2000 characters
        except Exception as e:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå log ‡πÑ‡∏î‡πâ: {e}")
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå log")

def show_menu():
    """Show service manager menu"""
    print("\n" + "="*80)
    print("WAWAGOT.AI - Service Manager")
    print("="*80)
    print()
    print("üìã ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:")
    print()
    print("1. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Service")
    print("2. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Service")
    print("3. ‡∏´‡∏¢‡∏∏‡∏î Service")
    print("4. ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Service")
    print("5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞")
    print("6. ‡∏•‡∏ö Service")
    print("7. ‡∏î‡∏π Log")
    print("8. ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    print()

def main():
    """Main function"""
    # Check if running as administrator
    if not check_admin():
        print("‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô Administrator")
        print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 'Run as administrator'")
        input("‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å...")
        return
    
    print("‚úÖ ‡∏£‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô Administrator ‡πÅ‡∏•‡πâ‡∏ß")
    
    # Check Python installation
    success, stdout, stderr = run_command("python --version")
    if not success:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Python")
        print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python ‡∏Å‡πà‡∏≠‡∏ô")
        input("‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å...")
        return
    
    print("‚úÖ Python ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
    
    while True:
        show_menu()
        try:
            choice = input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (1-8): ").strip()
            
            if choice == '1':
                install_service()
            elif choice == '2':
                start_service()
            elif choice == '3':
                stop_service()
            elif choice == '4':
                restart_service()
            elif choice == '5':
                check_status()
            elif choice == '6':
                remove_service()
            elif choice == '7':
                view_log()
            elif choice == '8':
                print("\nüëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô WAWAGOT.AI Service Manager")
                break
            else:
                print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 1-8")
            
            input("\n‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏°‡∏ô‡∏π...")
            
        except KeyboardInterrupt:
            print("\n\nüëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô WAWAGOT.AI Service Manager")
            break
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
            input("‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏°‡∏ô‡∏π...")

if __name__ == '__main__':
    main() 