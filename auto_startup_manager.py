#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
WAWAGOT.AI - Auto Startup Manager
‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
"""

import os
import sys
import winreg
import subprocess
from pathlib import Path

def get_startup_registry():
    """Get startup registry key"""
    try:
        return winreg.OpenKey(
            winreg.HKEY_CURRENT_USER,
            r"Software\Microsoft\Windows\CurrentVersion\Run",
            0,
            winreg.KEY_READ | winreg.KEY_WRITE
        )
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î Registry ‡πÑ‡∏î‡πâ: {e}")
        return None

def add_to_startup():
    """Add WAWAGOT.AI to Windows startup"""
    try:
        # Get current script path
        script_path = Path(__file__).parent / "launch_v2.py"
        python_path = sys.executable
        
        # Create startup command
        startup_command = f'"{python_path}" "{script_path}"'
        
        # Add to registry
        key = get_startup_registry()
        if key:
            winreg.SetValueEx(
                key,
                "WAWAGOT.AI",
                0,
                winreg.REG_SZ,
                startup_command
            )
            winreg.CloseKey(key)
            print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° WAWAGOT.AI ‡∏•‡∏á‡πÉ‡∏ô Startup ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            return True
        else:
            return False
            
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° Startup ‡πÑ‡∏î‡πâ: {e}")
        return False

def remove_from_startup():
    """Remove WAWAGOT.AI from Windows startup"""
    try:
        key = get_startup_registry()
        if key:
            winreg.DeleteValue(key, "WAWAGOT.AI")
            winreg.CloseKey(key)
            print("‚úÖ ‡∏•‡∏ö WAWAGOT.AI ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Startup ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            return True
        else:
            return False
            
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö Startup ‡πÑ‡∏î‡πâ: {e}")
        return False

def check_startup_status():
    """Check if WAWAGOT.AI is in startup"""
    try:
        key = get_startup_registry()
        if key:
            try:
                value, _ = winreg.QueryValueEx(key, "WAWAGOT.AI")
                winreg.CloseKey(key)
                print("‚úÖ WAWAGOT.AI ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Startup ‡πÅ‡∏•‡πâ‡∏ß")
                print(f"   Command: {value}")
                return True
            except FileNotFoundError:
                winreg.CloseKey(key)
                print("‚ùå WAWAGOT.AI ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Startup")
                return False
        else:
            return False
            
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Startup ‡πÑ‡∏î‡πâ: {e}")
        return False

def create_startup_script():
    """Create startup script"""
    try:
        script_content = '''@echo off
cd /d "%~dp0"
python launch_v2.py
pause
'''
        
        script_path = Path("startup_wawagot.bat")
        with open(script_path, 'w', encoding='utf-8') as f:
            f.write(script_content)
        
        print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Startup Script: {script_path}")
        return str(script_path)
        
    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á Startup Script ‡πÑ‡∏î‡πâ: {e}")
        return None

def show_menu():
    """Show startup manager menu"""
    print("\n" + "="*80)
    print("WAWAGOT.AI - Auto Startup Manager")
    print("="*80)
    print()
    print("üìã ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:")
    print()
    print("1. ‡πÄ‡∏û‡∏¥‡πà‡∏° WAWAGOT.AI ‡∏•‡∏á‡πÉ‡∏ô Startup")
    print("2. ‡∏•‡∏ö WAWAGOT.AI ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Startup")
    print("3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Startup")
    print("4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Startup Script")
    print("5. ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    print()

def main():
    """Main function"""
    print("üöÄ WAWAGOT.AI Auto Startup Manager")
    print("‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á")
    
    while True:
        show_menu()
        try:
            choice = input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (1-5): ").strip()
            
            if choice == '1':
                add_to_startup()
            elif choice == '2':
                remove_from_startup()
            elif choice == '3':
                check_startup_status()
            elif choice == '4':
                create_startup_script()
            elif choice == '5':
                print("\nüëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô WAWAGOT.AI Auto Startup Manager")
                break
            else:
                print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 1-5")
            
            input("\n‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏°‡∏ô‡∏π...")
            
        except KeyboardInterrupt:
            print("\n\nüëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô WAWAGOT.AI Auto Startup Manager")
            break
        except Exception as e:
            print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
            input("‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏°‡∏ô‡∏π...")

if __name__ == '__main__':
    main() 